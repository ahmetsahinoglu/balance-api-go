// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ethereum/handler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "balance-api-go/internal/model"
	reflect "reflect"

	fiber "github.com/gofiber/fiber/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockEthService is a mock of EthService interface.
type MockEthService struct {
	ctrl     *gomock.Controller
	recorder *MockEthServiceMockRecorder
}

// MockEthServiceMockRecorder is the mock recorder for MockEthService.
type MockEthServiceMockRecorder struct {
	mock *MockEthService
}

// NewMockEthService creates a new mock instance.
func NewMockEthService(ctrl *gomock.Controller) *MockEthService {
	mock := &MockEthService{ctrl: ctrl}
	mock.recorder = &MockEthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthService) EXPECT() *MockEthServiceMockRecorder {
	return m.recorder
}

// GetBalance mocks base method.
func (m *MockEthService) GetBalance(ctx *fiber.Ctx, request *model.BalanceRequest) (model.BalanceResponseData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, request)
	ret0, _ := ret[0].(model.BalanceResponseData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockEthServiceMockRecorder) GetBalance(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockEthService)(nil).GetBalance), ctx, request)
}
